Parameters:
  App:
    Type: String
  Env:
    Type: String

Conditions:
  IsNotProduction: !Not
    - !Equals
      - !Ref Env
      - production

Resources:
  SchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${App}-${Env}-scheduler-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:UpdateService
                  - ecs:DescribeServices
                  - ecs:ListServices
                Resource:
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${App}-${Env}-*
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:service/${App}-${Env}-*/*

  StopSchedule:
    Type: AWS::Scheduler::Schedule
    Condition: IsNotProduction
    Properties:
      FlexibleTimeWindow:
        Mode: "OFF"
      GroupName: default
      Name: !Sub ${App}-${Env}-stop-service
      Description: "Stop ECS service during off-hours"
      ScheduleExpression: "cron(00 13 ? * * *)"
      ScheduleExpressionTimezone: "Asia/Tokyo"
      State: "ENABLED"
      Target:
        Arn: "arn:aws:scheduler:::aws-sdk:ecs:updateService"
        RoleArn: !GetAtt SchedulerRole.Arn
        Input: !Sub |
          {
            "Cluster": "${App}-${Env}-Cluster-vmNvReXCNSJW",
            "Service": "${App}-${Env}-api-Service-aqgW5mTWocdS",
            "DesiredCount": 0
          }

  StartSchedule:
    Type: AWS::Scheduler::Schedule
    Condition: IsNotProduction
    Properties:
      FlexibleTimeWindow:
        Mode: "OFF"
      GroupName: default
      Name: !Sub ${App}-${Env}-start-service
      Description: "Start ECS service during work hours"
      ScheduleExpression: "cron(00 12 ? * MON-FRI *)"
      ScheduleExpressionTimezone: "Asia/Tokyo"
      State: "DISABLED"
      Target:
        Arn: "arn:aws:scheduler:::aws-sdk:ecs:updateService"
        RoleArn: !GetAtt SchedulerRole.Arn
        Input: !Sub |
          {
            "Cluster": "${App}-${Env}-Cluster-vmNvReXCNSJW",
            "Service": "${App}-${Env}-api-Service-aqgW5mTWocdS",
            "DesiredCount": 1
          }
